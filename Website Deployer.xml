<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>sos-builder1</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 5 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
#
# Deploys the current Spoon website to the website server.
# To test the site locally before deploying run `jekyll serve`
# in the website branch.
#
# Copied in the config of job &quot;website deployer&quot; on Jenkins

REPO=&quot;https://github.com/INRIA/spoon.git&quot;
DIR=temp-spoon-clone
DIR_WEBSITE=${DIR}/doc/

USER_SERVER=&quot;spoon-bot&quot;
WEBSITE_SERVER=&quot;${USER_SERVER}@scm.gforge.inria.fr&quot;
SOURCE=&quot;_site/&quot;
HOST_DESTINATION=&quot;/home/groups/spoon/&quot;
FOLDER_DESTINATION=&quot;htdocs&quot;
DESTINATION=&quot;${HOST_DESTINATION}${FOLDER_DESTINATION}/&quot;

# Delete any existing previous temps spoon clone.
rm -rf $DIR

# Clone the current repo into temp folder.
git clone $REPO $DIR

# Move working directory into temp folder.
cd $DIR_WEBSITE

# Generate the website.
jekyll build
if [ &quot;$?&quot; -ne 0 ]; then
    echo &quot;Jekyll cannot build your site!&quot;
    exit 1
fi

# moving repositories before backup
ssh $WEBSITE_SERVER &quot;mv ${DESTINATION}/repositories ${HOST_DESTINATION}&quot;

# Back up the old website and create the folder for the new one.
TIMESTAMP=$(date +%s)
BACKUP_DESTINATION=&quot;${HOST_DESTINATION}${FOLDER_DESTINATION}-${TIMESTAMP}&quot;
ssh $WEBSITE_SERVER &quot;mv ${DESTINATION} ${BACKUP_DESTINATION}&quot;
if [ &quot;$?&quot; -ne 0 ]; then
    echo &quot;Error when you tried to back up the old website!&quot;
    exit 1
fi

ssh $WEBSITE_SERVER &quot;mkdir -p ${DESTINATION}&quot;
if [ &quot;$?&quot; -ne 0 ]; then
    echo &quot;Error when you tried to create the folder of the new website!&quot;
    exit 1
fi

# Copy the website on the server.
scp -r $SOURCE* $WEBSITE_SERVER:$DESTINATION
if [ &quot;$?&quot; -ne 0 ]; then
    echo &quot;Error when you tried to copy the new version on the server!&quot;
    exit 1
fi

# moving repositories before backup
ssh $WEBSITE_SERVER &quot;mv ${HOST_DESTINATION}/repositories ${DESTINATION}&quot;

# Remove backups older than 3 days.
ssh $WEBSITE_SERVER &quot;find ${HOST_DESTINATION}${FOLDER_DESTINATION}-* -mtime +3 -type d -exec rm -rf {} \;&quot;

# Come back at the root of the temp project.
cd ..

# Generate maven site and deploy it.
# coming back into the main folder with pom.xml
mvn site site:deploy
if [ &quot;$?&quot; -ne 0 ]; then
    echo &quot;Error when you tried to build or deploy maven site!&quot;
    exit 1
fi

# Delete our temp folder.
cd .. &amp;&amp; rm -rf $DIR
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>